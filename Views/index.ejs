<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>User Management</title>
    <style>
        .action-button {
            margin-right: 10px;
        }
    </style>
</head>

<body>
    <form onsubmit="handleFormSubmit(event)">
        <label for="username">Username</label>
        <input type="text" name="username" id="username" required />
        <label for="email">Email</label>
        <input type="email" name="email" id="email" required />
        <label for="phone">Phone No</label>
        <input type="tel" name="phone" id="phone" required />
        <button type="submit">Submit</button>
    </form>

    <ul id="userList"></ul>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.6.8/axios.min.js"></script>
    <script>
        // Function to handle form submission
        function handleFormSubmit(event) {
            event.preventDefault();

            const userDetails = {
                username: document.getElementById('username').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value,
            };

            axios.post('http://localhost:3000/user', userDetails)
                .then(response => {
                    displayUserOnScreen(response.data); // Display user details on screen
                })
                .catch(error => {
                    console.error('There was an error saving the user data:', error);
                });
        }

        // Function to display user details on screen
        function displayUserOnScreen(user) {
            const userList = document.getElementById('userList');
            const listItem = document.createElement('li');

            listItem.textContent = `${user.username} - ${user.email} - ${user.phone}`;

            // Create delete button
            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.classList.add('action-button');
            deleteButton.addEventListener('click', function () {
                deleteUser(user._id, listItem);
            });

            // Create edit button
            const editButton = document.createElement('button');
            editButton.textContent = 'Edit';
            editButton.classList.add('action-button');
            editButton.addEventListener('click', function () {
                populateForm(user); // Populate the form with user details for editing
                deleteUser(user._id, listItem); // Optionally delete from the list after editing
            });

            // Append buttons to list item
            listItem.appendChild(deleteButton);
            listItem.appendChild(editButton);

            // Append the list item to the user list
            userList.appendChild(listItem);
        }

        // Function to delete a user
        function deleteUser(userId, listItem) {
            axios.delete(`http://localhost:3000/user/${userId}`)
                .then(() => {
                    listItem.remove(); // Remove the list item from the DOM
                })
                .catch(error => {
                    console.error('There was an error deleting the user data:', error);
                });
        }

        // Function to populate the form for editing
        function populateForm(user) {
            document.getElementById('username').value = user.username;
            document.getElementById('email').value = user.email;
            document.getElementById('phone').value = user.phone;
        }

        // Function to load existing users on page load
        window.addEventListener("DOMContentLoaded", () => {
            axios.get("http://localhost:3000/user")
                .then(res => {
                    res.data.forEach(user => {
                        displayUserOnScreen(user);
                    });
                })
                .catch(err => {
                    console.error('There was an error fetching the user data:', err);
                });
        });
    </script>
</body>

</html>
